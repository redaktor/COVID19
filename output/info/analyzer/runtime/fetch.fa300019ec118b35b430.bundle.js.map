{"version":3,"sources":["webpack://bundle_client/fetch.ts","webpack://bundle_client/wrapper.ts","webpack://bundle_client/./node_modules/cross-fetch/dist/browser-polyfill.js"],"names":["__webpack_require__","r","__webpack_exports__","_util_wrapper__WEBPACK_IMPORTED_MODULE_1__","Object","d","wrapper","_global__WEBPACK_IMPORTED_MODULE_0__","nameOnGlobal","constructor","bind","self","exports","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill"],"mappings":"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","file":"runtime/fetch.fa300019ec118b35b430.bundle.js","sourcesContent":["`!has('build-elide')`;\nimport 'cross-fetch/polyfill';\nimport wrapper from './util/wrapper';\n\nexport default wrapper('fetch', false, true) as (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n","import global from '../global';\nimport has from '../../core/has';\n\nexport default function wrapper(nameOnGlobal: string, constructor = false, bind = false): any {\n\tif (has('test')) {\n\t\tif (constructor) {\n\t\t\treturn function(...args: any[]) {\n\t\t\t\treturn new global[nameOnGlobal](...args);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(...args: any[]) {\n\t\t\t\treturn global[nameOnGlobal](...args);\n\t\t\t};\n\t\t}\n\t}\n\n\treturn bind ? global[nameOnGlobal].bind(global) : global[nameOnGlobal];\n}\n","(function(self) {\n\nvar irrelevant = (function (exports) {\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(typeof self !== 'undefined' ? self : this);\n"],"sourceRoot":""}